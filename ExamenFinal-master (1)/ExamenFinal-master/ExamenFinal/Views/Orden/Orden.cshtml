@{
    Layout = null;
}

@model ExamenFinal.Models.SuperClase

<!DOCTYPE html>

<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Formulario de Orden de Compra</title>
    <style>
        body {
            font-family: Arial, sans-serif;
        }

        .container {
            width: 100%;
            max-width: 900px;
            margin: 0 auto;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        table, th, td {
            border: 1px solid black;
        }

        th, td {
            padding: 8px;
            text-align: left;
        }

        .form-group {
            margin-bottom: 15px;
        }

            .form-group label {
                display: inline-block;
                width: 150px;
            }

            .form-group input, .form-group select {
                width: calc(100% - 160px);
            }

        .buttons {
            text-align: center;
            margin-top: 20px;
        }

            .buttons input {
                margin: 0 10px;
                padding: 10px 20px;
                font-size: 16px;
            }
    </style>
</head>
<body>

    <div class="container">
        <h2>Formulario de Orden de Compra</h2>

        <form>
            <div class="form-group">

                <label for="cliente">Cliente:</label>
                <select id="customer_id" name="customer_id" class="form-control">
                    <option value="">Seleccione un cliente</option>
                    @if (Model != null && Model.Customers != null && Model.Customers.Any())
                    {
                        foreach (var customer in Model.Customers)
                        {
                            <option value="@customer.customer_id">@customer.first_name @customer.last_name</option>
                        }
                    }
                    else
                    {
                        <option value="">No hay clientes disponibles</option>
                    }
                </select>


            </div>

            <div class="form-group">
                <a href="@Url.Action("Create", "Customer")" class="btn btn-primary">Agregar Nuevo Cliente</a>
            </div>

            <div class="form-group">
                <label for="fecha">Fecha:</label>
                <input type="date" id="fecha" value="2024-08-21">
            </div>

            <div class="form-group">
                <label for="fecha-entrega">Fecha Entrega:</label>
                <input type="date" id="fecha-entrega" value="2024-08-23">
            </div>

            <div class="form-group">
                <label for="tienda">Tienda:</label>
                <select id="store_id" name="store_id" class="form-control" onchange="fetchStaff()">

                    <option value="">Seleccione una tienda</option>
                    @if (Model != null && Model.Stores != null && Model.Stores.Any())
                    {
                        foreach (var store in Model.Stores)
                        {
                            <option value="@store.store_id">@store.store_name</option>
                        }
                    }
                    else
                    {
                        <option value="">No hay tiendas disponibles</option>
                    }
                </select>
            </div>


            <div class="form-group">
                <label for="staff_id">Empleado:</label>
                <select id="staff_id" name="staff_id" class="form-control">
                    <option value="">Seleccione un miembro del staff</option>
                    <!-- Las opciones del staff se agregarán aquí con JavaScript -->
                </select>
            </div>
            <form method="post">
                <div class="form-group">
                    <label for="product_id">ID del Producto:</label>
                    <input type="text" id="product_id" name="product_id" class="form-control" />
                    <input type="submit" value="Agregar Producto" class="btn btn-primary mt-2" />
                </div>
            </form>
            <table>
                <thead>
                    <tr>
                        <th>Código Producto</th>
                        <th>Producto</th>
                        <th>Cantidad</th>
                        <th>Precio</th>
                        <th>Descuento</th>
                        <th>Total</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>1</td>
                        <td>Monitor</td>
                        <td>1</td>
                        <td>152</td>
                        <td>8.1</td>
                        <td>143.9</td>
                    </tr>
                    <tr>
                        <td>1020</td>
                        <td>Estuches de celular</td>
                        <td>2</td>
                        <td>20</td>
                        <td>2.5</td>
                        <td>17.5</td>
                    </tr>
                </tbody>
            </table>

            <div class="buttons">
                <input type="submit" value="GUARDAR">
                <input type="reset" value="CANCELAR">
            </div>
        </form>
    </div>

</body>
<script type="text/javascript">
    function fetchStaff() {
        var storeId = document.getElementById('store_id').value;
        var staffSelect = document.getElementById('staff_id');
        staffSelect.innerHTML = '<option value="">Cargando...</option>'; // Mostrar mensaje de carga

        if (storeId) {
            fetch('@Url.Action("GetStaffByStore", "Orden")?storeId=' + storeId)
                .then(response => response.json())
                .then(data => {
                    staffSelect.innerHTML = '<option value="">Seleccione un miembro del staff</option>'; // Limpiar las opciones

                    data.forEach(staff => {
                        var option = document.createElement('option');
                        option.value = staff.staff_id;
                        option.textContent = `${staff.first_name} ${staff.last_name}`;
                        staffSelect.appendChild(option);
                    });
                })
                .catch(error => {
                    console.error('Error al cargar el staff:', error);
                    staffSelect.innerHTML = '<option value="">Error al cargar los miembros del staff</option>';
                });
        } else {
            staffSelect.innerHTML = '<option value="">Seleccione una tienda primero</option>';
        }
    }
</script>
</html>
